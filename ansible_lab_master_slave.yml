---
#start master containers (master not linking to slaves can be only handled by private nws)
#  - name: Start Master Container (CLI)
#    shell: docker run -d -P --name=master-{{ master_name }} -h master-{{ master_name }}  ansible_lab/master:latest
#    register: run_master
#    failed_when: 
#      - "'Conflict' not  in run_master.stderr" 
#      - "run_master.rc != 0"
#    changed_when:
#      - "'No such container' not in run_master.stderr"
#      - "run_master.rc == 0"
#    tags:
#      - startup
#      - start_master

#start master containers (master not linking to slaves can be only handled by private nws)
  - name: Start Master Container (Module)
    docker_container:
      name: master-{{ master_name }}
      hostname: master-{{ master_name }}
      image: ansible_lab/master:latest
      state: started 
      published_ports: all
    tags:
      - startup
      - start_master


  - name: SSH forwarding into bashrc
    shell: echo "ssh root@`docker exec master-{{ master_name }} hostname -I`;exit" >> /home/ansiblelabuser{{ master_name }}/.bashrc 
    tags:
      - startup
      - start_master
    

#start slave containers
#  - name: Start Slave Container (CLI)
#    shell: docker run -d -P --name=master-{{ master_name }}-slave-{{ item }} -h master-{{ master_name }}-slave-{{ item }} ansible_lab/slave:latest
#    register: run_slave
#    failed_when: 
#      - "'Conflict' not in run_slave.stderr" 
#      - "run_slave.rc != 0"
#    changed_when:
#      - "'No such container' not in run_slave.stderr"
#      - "run_slave.rc == 0"
#    with_sequence: start=1 end={{ slaves }} 
#    tags:
#      - startup
#      - start_slave

#start slave containers
  - name: Start Slave Container (Module)
    docker_container:
      name: master-{{ master_name }}-slave-{{ item }}
      hostname: master-{{ master_name }}-slave-{{ item }}
      image: ansible_lab/slave:latest
      state: started 
      published_ports: all
    register: run_slave
    with_sequence: start=1 end={{ slaves }} 
    tags:
      - startup
      - start_slave

#copy id_rsa of user to master container
  - name: Copy SSH Keys to Master
    shell: docker cp /home/ansiblelabuser{{ master_name }}/.ssh/id_rsa master-{{ master_name }}:/root/.ssh/id_rsa
    tags:
      - startup
      - ssh_key_exchange

  - name: Copy SSH Keys to Master (public)
    shell: docker cp /home/ansiblelabuser{{ master_name }}/.ssh/id_rsa.pub master-{{ master_name }}:/root/.ssh/authorized_keys
    tags:
      - startup
      - ssh_key_exchange

#copy id_rsa.pub of user to slave container
  - name: Copy SSH Keys to Slaves
    shell: docker cp /home/ansiblelabuser{{ master_name }}/.ssh/id_rsa.pub master-{{ master_name }}-slave-{{ item }}:/root/.ssh/authorized_keys
    with_sequence: start=1 end={{ slaves }}
    tags:
      - startup
      - ssh_key_exchange

#remove slave containers
  - name: Remove Slave Containers
    shell: docker stop -t=0  master-{{ master_name }}-slave-{{ item }} && docker rm -f master-{{ master_name }}-slave-{{ item }}
    register: stop_slave
    failed_when:
      - "'No such container' not in stop_slave.stderr"
      - "stop_slave.rc != 0"
    changed_when:
      - "'No such container' not in stop_slave.stderr"
      - "stop_slave.rc == 0"
    with_sequence: start=1 end={{ slaves }} 
    tags:
      - shutdown
      - remove_slaves

#remove master containers
  - name: Remove Master Containers
    shell: docker stop -t=0 master-{{ master_name }} && docker rm -f master-{{ master_name }}
    register: stop_master
    failed_when:
      - "'No such container' not in stop_master.stderr"
      - "stop_master.rc != 0"
    changed_when:
      - "'No such container' not in stop_master.stderr"
      - "stop_master.rc == 0"
    tags:
      - shutdown
      - remove_masters
